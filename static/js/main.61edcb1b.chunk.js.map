{"version":3,"sources":["components/contactForm/ContactForm.module.css","components/phoneList/PhoneList.module.css","components/filter/Filter.module.css","components/Logo/Logo.module.css","components/section/Section.module.css","components/Alert/Alert.module.css","components/hoc/withTransition.js","components/Logo/Logo.js","components/section/Section.js","redux/contact/contactActions.js","redux/contact/contactOperation.js","redux/contact/contactSelector.js","components/phoneList/PhoneList.js","components/contactForm/ContactForm.js","components/filter/Filter.js","components/Alert/Alert.js","components/App.js","redux/contact/contactReducer.js","redux/store.js","index.js"],"names":["module","exports","withTransition","style","WrappedComponent","visible","undefined","this","props","isVisible","CSSTransition","appear","in","timeout","classNames","unmountOnExit","state","Component","Logo","className","s","logo","Section","title","children","section","addContactSuccess","createAction","addContactRequest","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactRequest","removeContactSuccess","removeContactError","changeFilter","addContact","data","dispatch","contactsAction","axios","post","then","response","catch","error","fetchContacs","get","console","log","removeContact","id","delete","getItems","contact","items","getFilter","filter","isLoading","loadingReducer","getFilteredContacts","createSelector","normalizeSearch","toLowerCase","item","name","includes","connect","contactSelector","onRemoveContact","contactOperation","TransitionGroup","component","taskList","map","number","key","display","margin","type","btn","onClick","ContactForm","handleInputChange","e","setState","target","value","handleSubmit","preventDefault","onAddContact","onSubmit","form","field","onChange","input","placeholder","htmlFor","label","disabled","mapDispatchToprops","onFilterChannge","contactActions","event","Alert","alert","App","contacts","length","mapDispatchToProps","createReducer","action","payload","el","removeContactsSuccess","removeContactsError","combineReducers","defaultMiddleware","getDefaultMiddleware","store","configureStore","reducer","contactReducer","devTools","process","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61edcb1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__jOUG4\",\"field\":\"ContactForm_field__32mEq\",\"input\":\"ContactForm_input__3GQZP\",\"label\":\"ContactForm_label__1eBis\",\"btn\":\"ContactForm_btn__8s8Ax\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskList\":\"PhoneList_taskList__1UKhQ\",\"btn\":\"PhoneList_btn__3gne2\",\"enter\":\"PhoneList_enter__AINdH\",\"enterActive\":\"PhoneList_enterActive__SriMv\",\"exit\":\"PhoneList_exit__Q6TnI\",\"exitActive\":\"PhoneList_exitActive__1WknN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"Filter_field__3HFI4\",\"input\":\"Filter_input__23cjG\",\"label\":\"Filter_label__1Z0sK\",\"enter\":\"Filter_enter__3FeHV\",\"enterActive\":\"Filter_enterActive__1bBJX\",\"exit\":\"Filter_exit__s5hOA\",\"exitActive\":\"Filter_exitActive__2ajJj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__30ctS\",\"appear\":\"Logo_appear__3khVz\",\"appearActive\":\"Logo_appearActive__3E2dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3hrN4\",\"title\":\"Section_title__3tuRy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__1BCgu\",\"enter\":\"Alert_enter__3ddO2\",\"enterActive\":\"Alert_enterActive__1vwvM\",\"exit\":\"Alert_exit__1Niau\",\"exitActive\":\"Alert_exitActive__2ulRR\"};","import React, { Component } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst withTransition = style => WrappedComponent => {\r\n  return class withTransition extends Component {\r\n    render() {\r\n      const visible =\r\n        this.props.isVisible === undefined ? true : this.props.isVisible;\r\n      return (\r\n        <CSSTransition\r\n          appear={true}\r\n          in={visible}\r\n          timeout={500}\r\n          classNames={style}\r\n          unmountOnExit\r\n        >\r\n          <WrappedComponent {...this.props} {...this.state} />\r\n        </CSSTransition>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default withTransition;\r\n","import React, { Component } from 'react';\r\nimport withTransition from '../hoc/withTransition';\r\nimport s from './Logo.module.css';\r\n\r\nclass Logo extends Component {\r\n  render() {\r\n    return <h2 className={s.logo}>Phonebook</h2>;\r\n  }\r\n}\r\n\r\nexport default withTransition(s)(Logo);\r\n","import React from 'react';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <div className={s.section}>\r\n        {title && <h2 className={s.title}>{title}</h2>}\r\n        {children}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContactSuccess = createAction('contacts/addSuccess');\r\nconst addContactRequest = createAction('contacts/addRequest');\r\nconst addContactError = createAction('contacts/addError');\r\n\r\nconst fetchContactsRequest = createAction('contacts/fetchRequest');\r\nconst fetchContactsSuccess = createAction('contacts/fetchSuccess');\r\nconst fetchContactsError = createAction('contacts/fetchError');\r\n\r\nconst removeContactRequest = createAction('contacts/removeRequest');\r\nconst removeContactSuccess = createAction('contacts/removeSuccess');\r\nconst removeContactError = createAction('contacts/removeError');\r\n\r\nconst changeFilter = createAction('contact/changeFilter');\r\n\r\nexport default {\r\n  addContactSuccess,\r\n  addContactRequest,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  changeFilter,\r\n};\r\n","import axios from 'axios';\r\nimport contactsAction from './contactActions';\r\n\r\nconst addContact = data => dispatch => {\r\n  dispatch(contactsAction.addContactRequest());\r\n\r\n  axios\r\n    .post('http://localhost:2000/contacts', { ...data })\r\n    .then(response => dispatch(contactsAction.addContactSuccess(response.data)))\r\n    .catch(error => dispatch(contactsAction.addContactError(error)));\r\n};\r\n\r\nconst fetchContacs = () => dispatch => {\r\n  dispatch(contactsAction.fetchContactsRequest());\r\n\r\n  axios\r\n    .get('http://localhost:2000/contacts')\r\n    .then(response =>\r\n      dispatch(contactsAction.fetchContactsSuccess(response.data)),\r\n    )\r\n    .catch(error =>\r\n      dispatch(contactsAction.fetchContactsError(console.log(error))),\r\n    );\r\n};\r\n\r\nconst removeContact = id => dispatch => {\r\n  dispatch(contactsAction.removeContactRequest());\r\n  axios\r\n    .delete(`http://localhost:2000/contacts/${id}`)\r\n    .then(() => dispatch(contactsAction.removeContactSuccess(id)))\r\n    .catch(error => dispatch(contactsAction.removeContactError(error)));\r\n};\r\n\r\nexport default { addContact, fetchContacs, removeContact };\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getItems = state => state.contact.items;\r\n\r\nconst isLoading = state => state.contact.loadingReducer;\r\n\r\nconst getFilter = state => state.contact.filter;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getFilter, getItems],\r\n  (filter, items) => {\r\n    const normalizeSearch = filter.toLowerCase();\r\n    return items.filter(item =>\r\n      item.name.toLowerCase().includes(normalizeSearch),\r\n    );\r\n  },\r\n);\r\n\r\nexport default {\r\n  getItems,\r\n  isLoading,\r\n  getFilter,\r\n  getFilteredContacts,\r\n};\r\n","import React from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport contactOperation from '../../redux/contact/contactOperation';\r\nimport contactSelector from '../../redux/contact/contactSelector';\r\nimport s from './PhoneList.module.css';\r\n\r\n// const filterContacs = (items, filter) => {\r\n//   const normalizeSearch = filter.toLowerCase();\r\n//   return items.filter(item =>\r\n//     item.name.toLowerCase().includes(normalizeSearch),\r\n//   );\r\n// };\r\n\r\nconst PhoneList = ({ items, filter, onRemoveContact }) => {\r\n  // const items = filterContacs(contact, filter);\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={s.taskList}>\r\n      {items.map(({ id, name, number }) => {\r\n        return (\r\n          <CSSTransition key={id} timeout={250} classNames={s}>\r\n            <li className={s.item}>\r\n              <p style={{ display: 'inline-block', margin: '10px' }}>\r\n                {name} - {number}\r\n              </p>\r\n              <button\r\n                type=\"button\"\r\n                className={s.btn}\r\n                onClick={() => onRemoveContact(id)}\r\n              >\r\n                Del\r\n              </button>\r\n            </li>\r\n          </CSSTransition>\r\n        );\r\n      })}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  items: contactSelector.getFilteredContacts(state),\r\n  // filter: state.contact.filter,\r\n});\r\n\r\nconst mapDispatchToprops = dispatch => ({\r\n  onRemoveContact: id => dispatch(contactOperation.removeContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToprops)(PhoneList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactOperation from '../../redux/contact/contactOperation';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onAddContact(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.form}>\r\n        <div className={s.field}>\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={this.handleInputChange}\r\n            className={s.input}\r\n            name=\"name\"\r\n            id=\"name\"\r\n            placeholder=\" \"\r\n          />\r\n          <label htmlFor=\"name\" className={s.label}>\r\n            Name\r\n          </label>\r\n        </div>\r\n\r\n        <div className={s.field}>\r\n          <input\r\n            type=\"tel\"\r\n            value={number}\r\n            onChange={this.handleInputChange}\r\n            className={s.input}\r\n            name=\"number\"\r\n            id=\"tel\"\r\n            placeholder=\" \"\r\n          />\r\n          <label htmlFor=\"tel\" className={s.label}>\r\n            Phone number\r\n          </label>\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className={s.btn}\r\n          disabled={name === '' ? true : false}\r\n        >\r\n          Add\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToprops = {\r\n  onAddContact: contactOperation.addContact,\r\n};\r\n\r\nexport default connect(null, mapDispatchToprops)(ContactForm);\r\n","import React from 'react';\r\nimport withTransition from '../hoc/withTransition';\r\nimport { connect } from 'react-redux';\r\nimport contactActions from '../../redux/contact/contactActions';\r\nimport contactSelector from '../../redux/contact/contactSelector';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = props => {\r\n  return (\r\n    <div className={s.field}>\r\n      <input\r\n        type=\"text\"\r\n        onChange={event => props.onFilterChannge(event.target.value)}\r\n        className={s.input}\r\n        name=\"filter\"\r\n        id=\"filter\"\r\n        placeholder=\" \"\r\n      />\r\n      <label htmlFor=\"filter\" className={s.label}>\r\n        Name Search\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filter: contactSelector.getFilter(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToprops = {\r\n  onFilterChannge: contactActions.changeFilter,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToprops,\r\n)(withTransition(s)(Filter));\r\n","import React, { Component } from 'react';\r\nimport withTransition from '../hoc/withTransition';\r\nimport s from './Alert.module.css';\r\n\r\nclass Alert extends Component {\r\n  render() {\r\n    return <div className={s.alert}>This name, already exist in contacts.</div>;\r\n  }\r\n}\r\n\r\nexport default withTransition(s)(Alert);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Logo from './Logo/Logo';\r\nimport Section from './section/Section';\r\nimport PhoneList from './phoneList/PhoneList';\r\nimport ContactForm from './contactForm/ContactForm';\r\nimport Filter from './filter/Filter';\r\nimport Alert from './Alert/Alert';\r\nimport contactOperation from '../redux/contact/contactOperation';\r\nimport contactSelector from '../redux/contact/contactSelector';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacs();\r\n  }\r\n\r\n  render() {\r\n    const { contacts } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Logo />\r\n        <Section>\r\n          <Alert isVisible={false} />\r\n          <ContactForm />\r\n        </Section>\r\n\r\n        {contacts && (\r\n          <Section title=\"Contacts\">\r\n            <Filter isVisible={contacts.length > 1 ? true : false} />\r\n            <PhoneList />\r\n          </Section>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: contactSelector.getItems(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchContacs: contactOperation.fetchContacs,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactActions from './contactActions';\r\n\r\nconst removeContact = (state, action) =>\r\n  state.filter(el => el.id !== action.payload);\r\n\r\nconst changeFilter = (state, action) => action.payload;\r\n\r\nconst items = createReducer([], {\r\n  [contactActions.addContactSuccess]: (state, action) => [\r\n    ...state,\r\n    action.payload,\r\n  ],\r\n  [contactActions.removeContactSuccess]: removeContact,\r\n  [contactActions.fetchContactsSuccess]: (state, action) => action.payload,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contactActions.changeFilter]: changeFilter,\r\n});\r\n\r\nconst loadingReducer = createReducer(false, {\r\n  [contactActions.addContactRequest]: () => true,\r\n  [contactActions.addContactSuccess]: () => false,\r\n  [contactActions.addContactError]: () => false,\r\n  [contactActions.fetchContactsRequest]: () => true,\r\n  [contactActions.fetchContactsSuccess]: () => false,\r\n  [contactActions.fetchContactsError]: () => false,\r\n  [contactActions.removeContactRequest]: () => true,\r\n  [contactActions.removeContactsSuccess]: () => false,\r\n  [contactActions.removeContactsError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loadingReducer,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactReducer from './contact/contactReducer';\r\n\r\nconst defaultMiddleware = getDefaultMiddleware();\r\nconst store = configureStore({\r\n  reducer: { contact: contactReducer },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware: [...defaultMiddleware],\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './components/App';\r\nimport store from './redux/store';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}